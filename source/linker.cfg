#Adapted from dbuchwald @ https://github.com/dbuchwald/cc65-tools/blob/main/tutorial/03_blink/firmware.cfg
# More segments have been added
# Using the Garth's 1 chip glue logic http://wilsonminesco.com/6502primer/addr_decoding.html
#  RAM   $0000-3FFF (16KB)
#  ROM   $8000-FFFF (32KB)
#  VIA   $6000-600F
MEMORY
{
  #RAM is $0000-$0FFF, split up into page zero, page one (stack), and everything else
  PAGEZERO:  start=$0000, size=$0100, type=rw, define=yes, file="";
  STACK:     start=$0100, size=$0100, type=rw, define=yes, file="";
  GEN_RAM:   start=$0200, size=$3E00, type=rw, define=yes, file="";
  VIA:       start=$6000, size=$0010, type=rw, define=yes, file="";
  #Apparently the eeprom don't get as much wear from 1's?
  ROM:       start=$8000, size=$8000, type=ro, define=yes, fill=yes, fillval=$FF, file=%O;
}

SEGMENTS
{
  CODE:         load=ROM, type=ro, offset=$00, define=yes;
  VIA_SEGMENT:  load=ROM, type=ro, define=yes;
  LCD_CODE:     load=ROM, type=ro, define=yes;
  VECTORS:      load=ROM, type=ro, offset=$7ffa, optional=yes, define=yes;
  #open space for ram
  LCD_RAM:      load=GEN_RAM, type=rw, define=yes;
  LCD_PAGEZERO: load=PAGEZERO, type=rw, define=yes;
}