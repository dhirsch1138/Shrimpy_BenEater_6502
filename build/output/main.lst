ca65 V2.18 - Debian 2.19-1
Main file   : source/main.s
Current file: source/main.s

000000r 1               ;PURPOSE -  main code file
000000r 1               ;
000000r 1               ; adaptation from Ben Eater's keyboard.s https://eater.net/downloads/keyboard.s
000000r 1               ; mostly I am using it to learn to talk to the lcd in 4-bit mode
000000r 1               ;
000000r 1               ;Includes
000000r 1                 .include "via.s_imports"
000000r 2               ;PURPOSE - Imports needed symbols defined in via.s
000000r 2               ;
000000r 2               
000000r 2                 .import VIA_DDRB
000000r 2                 .import VIA_PORTB
000000r 2                 .import VIA_DDRA
000000r 2                 .import VIA_PORTA
000000r 2                 .import VIA_T1CL
000000r 2                 .import VIA_T1CH
000000r 2                 .import VIA_T1LL
000000r 2                 .import VIA_T1LH
000000r 2                 .import VIA_T2CL
000000r 2                 .import VIA_T2CH
000000r 2                 .import VIA_SR
000000r 2                 .import VIA_ACR
000000r 2                 .import VIA_PCR
000000r 2                 .import VIA_IFR
000000r 2                 .import VIA_IER
000000r 2                 .import VIA_PANH
000000r 2               
000000r 1                 .include "lcd.s_imports"
000000r 2               ;PURPOSE - Imports needed symbols defined in lcd.s
000000r 2               ;
000000r 2               
000000r 2               .import lcd_instruction
000000r 2               .import lcd_print_char
000000r 2               .import lcd_init
000000r 2               
000000r 1               
000000r 1                 .code
000000r 1               
000000r 1               reset:
000000r 1  A2 FF          ldx #$ff
000002r 1  9A             txs
000003r 1  A9 FF          lda #%11111111 ; Set all pins on port B to output
000005r 1  8D rr rr       sta VIA_DDRB
000008r 1  20 rr rr       jsr lcd_init
00000Br 1  A9 28          lda #%00101000 ; Set 4-bit mode; 2-line display; 5x8 font
00000Dr 1  20 rr rr       jsr lcd_instruction
000010r 1  A9 0E          lda #%00001110 ; Display on; cursor on; blink off
000012r 1  20 rr rr       jsr lcd_instruction
000015r 1  A9 06          lda #%00000110 ; Increment and shift cursor; don't shift display
000017r 1  20 rr rr       jsr lcd_instruction
00001Ar 1  A9 01          lda #%00000001 ; Clear display
00001Cr 1  20 rr rr       jsr lcd_instruction
00001Fr 1  A2 00          ldx #0
000021r 1               
000021r 1               print:
000021r 1  BD rr rr       lda message,x
000024r 1  F0 07          beq loop
000026r 1  20 rr rr       jsr lcd_print_char
000029r 1  E8             inx
00002Ar 1  4C rr rr       jmp print
00002Dr 1               
00002Dr 1               loop:
00002Dr 1  EA             nop
00002Er 1                 ;jump back to the loop reference. We are now looping forever and ever and ever
00002Er 1  4C rr rr       jmp loop
000031r 1               
000031r 1  4A 61 63 6B  message: .asciiz "Jackie is cute!"
000035r 1  69 65 20 69  
000039r 1  73 20 63 75  
000040r 1               
