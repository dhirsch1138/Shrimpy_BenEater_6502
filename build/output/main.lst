ca65 V2.18 - Debian 2.19-1
Main file   : source/main.s
Current file: source/main.s

000000r 1               ;PURPOSE -  main code file
000000r 1               ;
000000r 1               ;Includes
000000r 1                 .include "via.s_imports"
000000r 2               ;PURPOSE - Imports needed registers defined in via.s
000000r 2               ;
000000r 2               
000000r 2                 .import VIA_DDRB
000000r 2                 .import VIA_PORTB
000000r 2                 .import VIA_DDRA
000000r 2                 .import VIA_PORTA
000000r 2                 .import VIA_T1CL
000000r 2                 .import VIA_T1CH
000000r 2                 .import VIA_T1LL
000000r 2                 .import VIA_T1LH
000000r 2                 .import VIA_T2CL
000000r 2                 .import VIA_T2CH
000000r 2                 .import VIA_SR
000000r 2                 .import VIA_ACR
000000r 2                 .import VIA_PCR
000000r 2                 .import VIA_IFR
000000r 2                 .import VIA_IER
000000r 2                 .import VIA_PANH
000000r 2               
000000r 1                 ;.include "lcd.s_imports"
000000r 1               
000000r 1               LCD_4BIT_E  = %01000000
000000r 1               LCD_4BIT_RW = %00100000
000000r 1               LCD_4BIT_RS = %00010000
000000r 1               
000000r 1                 .code
000000r 1               
000000r 1               reset:
000000r 1  A2 FF          ldx #$ff
000002r 1  9A             txs
000003r 1  20 rr rr       jsr lcd_init
000006r 1  A9 28          lda #%00101000 ; Set 4-bit mode; 2-line display; 5x8 font
000008r 1  20 rr rr       jsr lcd_instruction
00000Br 1  A9 0E          lda #%00001110 ; Display on; cursor on; blink off
00000Dr 1  20 rr rr       jsr lcd_instruction
000010r 1  A9 06          lda #%00000110 ; Increment and shift cursor; don't shift display
000012r 1  20 rr rr       jsr lcd_instruction
000015r 1  A9 01          lda #%00000001 ; Clear display
000017r 1  20 rr rr       jsr lcd_instruction
00001Ar 1  A2 00          ldx #0
00001Cr 1               
00001Cr 1               print:
00001Cr 1  BD rr rr       lda message,x
00001Fr 1  F0 07          beq loop
000021r 1  20 rr rr       jsr print_char
000024r 1  E8             inx
000025r 1  4C rr rr       jmp print
000028r 1               
000028r 1               loop:
000028r 1  EA             nop
000029r 1                 ;jump back to the loop reference. We are now looping forever and ever and ever
000029r 1  4C rr rr       jmp loop
00002Cr 1               
00002Cr 1  4A 61 63 6B  message: .asciiz "Jackie is cute!"
000030r 1  69 65 20 69  
000034r 1  73 20 63 75  
00003Cr 1               
00003Cr 1               lcd_init:
00003Cr 1  A9 02          lda #%00000010 ; Set 4-bit mode
00003Er 1  8D rr rr       sta VIA_PORTB
000041r 1  09 40          ora #LCD_4BIT_E
000043r 1  8D rr rr       sta VIA_PORTB
000046r 1  29 0F          and #%00001111
000048r 1  8D rr rr       sta VIA_PORTB
00004Br 1  60             rts
00004Cr 1               
00004Cr 1               lcd_instruction:
00004Cr 1  20 rr rr       jsr lcd_wait
00004Fr 1  48             pha
000050r 1  4A             lsr
000051r 1  4A             lsr
000052r 1  4A             lsr
000053r 1  4A             lsr            ; Send high 4 bits
000054r 1  8D rr rr       sta VIA_PORTB
000057r 1  09 40          ora #LCD_4BIT_E        ; Set E bit to send instruction
000059r 1  8D rr rr       sta VIA_PORTB
00005Cr 1  49 40          eor #LCD_4BIT_E         ; Clear E bit
00005Er 1  8D rr rr       sta VIA_PORTB
000061r 1  68             pla
000062r 1  29 0F          and #%00001111 ; Send low 4 bits
000064r 1  8D rr rr       sta VIA_PORTB
000067r 1  09 40          ora #LCD_4BIT_E         ; Set E bit to send instruction
000069r 1  8D rr rr       sta VIA_PORTB
00006Cr 1  49 40          eor #LCD_4BIT_E         ; Clear E bit
00006Er 1  8D rr rr       sta VIA_PORTB
000071r 1  60             rts
000072r 1               
000072r 1               
000072r 1               lcd_wait:
000072r 1  48             pha
000073r 1  A9 F0          lda #%11110000  ; LCD data is input
000075r 1  8D rr rr       sta VIA_DDRB
000078r 1               lcdbusy:
000078r 1  A9 20          lda #LCD_4BIT_RW
00007Ar 1  8D rr rr       sta VIA_PORTB
00007Dr 1  A9 60          lda #(LCD_4BIT_RW | LCD_4BIT_E)
00007Fr 1  8D rr rr       sta VIA_PORTB
000082r 1  AD rr rr       lda VIA_PORTB       ; Read high nibble
000085r 1  48             pha             ; and put on stack since it has the busy flag
000086r 1  A9 20          lda #LCD_4BIT_RW
000088r 1  8D rr rr       sta VIA_PORTB
00008Br 1  A9 60          lda #(LCD_4BIT_RW | LCD_4BIT_E)
00008Dr 1  8D rr rr       sta VIA_PORTB
000090r 1  AD rr rr       lda VIA_PORTB       ; Read low nibble
000093r 1  68             pla             ; Get high nibble off stack
000094r 1  29 08          and #%00001000
000096r 1  D0 E0          bne lcdbusy
000098r 1               
000098r 1  A9 20          lda #LCD_4BIT_RW
00009Ar 1  8D rr rr       sta VIA_PORTB
00009Dr 1  A9 FF          lda #%11111111  ; LCD data is output
00009Fr 1  8D rr rr       sta VIA_DDRB
0000A2r 1  68             pla
0000A3r 1  60             rts
0000A4r 1               
0000A4r 1               print_char:
0000A4r 1  20 rr rr       jsr lcd_wait
0000A7r 1  48             pha
0000A8r 1  4A             lsr
0000A9r 1  4A             lsr
0000AAr 1  4A             lsr
0000ABr 1  4A             lsr             ; Send high 4 bits
0000ACr 1  09 10          ora #LCD_4BIT_RS         ; Set RS
0000AEr 1  8D rr rr       sta VIA_PORTB
0000B1r 1  09 40          ora #LCD_4BIT_E          ; Set E bit to send instruction
0000B3r 1  8D rr rr       sta VIA_PORTB
0000B6r 1  49 40          eor #LCD_4BIT_E          ; Clear E bit
0000B8r 1  8D rr rr       sta VIA_PORTB
0000BBr 1  68             pla
0000BCr 1  29 0F          and #%00001111  ; Send low 4 bits
0000BEr 1  09 10          ora #LCD_4BIT_RS         ; Set RS
0000C0r 1  8D rr rr       sta VIA_PORTB
0000C3r 1  09 40          ora #LCD_4BIT_E          ; Set E bit to send instruction
0000C5r 1  8D rr rr       sta VIA_PORTB
0000C8r 1  49 40          eor #LCD_4BIT_E          ; Clear E bit
0000CAr 1  8D rr rr       sta VIA_PORTB
0000CDr 1  60             rts
0000CDr 1               
